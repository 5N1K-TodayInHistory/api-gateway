spring:
  application:
    name: api-gateway

  profiles:
    active: debug

  # Database Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/api_gateway}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: UTC
    open-in-view: false

  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    ignore-migration-patterns: "*:ignored"

  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      username: ${REDIS_USERNAME:}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:RHM9dVjyEn6NGTEW3KUobcdmuRVxEngj}
  access-token-expiration: 259200000 # 3 days (3 * 24 * 60 * 60 * 1000)
  refresh-token-expiration: 2592000000 # 30 days (30 * 24 * 60 * 60 * 1000)

# Google OAuth2 Configuration
google:
  oauth2:
    client-id: ${GOOGLE_CLIENT_ID:373844583085-h96gpiof3727tjh9tm9dvl4bkml0sqtm.apps.googleusercontent.com}
    issuer: https://accounts.google.com
    jwks-uri: https://www.googleapis.com/oauth2/v3/certs

# Rate Limiting Configuration
rate-limit:
  capacity: 100
  refill-period: 300 # 5 minutes
  refill-tokens: 100

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080,https://api.5n1k.io}
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed-headers:
    - "*"
  allow-credentials: true

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api

# Logging Configuration
logging:
  level:
    com.ehocam.api_gateway: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# OpenAPI/Swagger Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health
      base-path: /actuator
  endpoint:
    health:
      show-details: never
      show-components: never
  health:
    defaults:
      enabled: true
    db:
      enabled: true
    redis:
      enabled: true

---
# Production Profile
spring:
  config:
    activate:
      on-profile: dev,prod

  # Redis Configuration (dev & prod from environment)
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD}
      database: ${REDIS_DATABASE:0}

  # Datasource (dev & prod from environment)
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false

# Server (dev & prod from environment)
server:
  port: ${SERVER_PORT}

# JWT (dev & prod from environment)
jwt:
  secret: ${JWT_SECRET}

# Google OAuth2 (dev & prod from environment)
google:
  oauth2:
    client-id: ${GOOGLE_CLIENT_ID}

# CORS (dev & prod from environment)
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}

logging:
  level:
    com.ehocam.api_gateway: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN

---
# Debug Profile
spring:
  config:
    activate:
      on-profile: debug

  # Debug JPA Configuration
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        use_sql_comments: true

# Debug Logging Configuration
logging:
  level:
    com.ehocam.api_gateway: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.transaction: DEBUG
    org.springframework.orm.jpa: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
